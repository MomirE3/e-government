services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - '5173:5173'
    environment:
      - PORT=5173
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/index.html:/app/index.html
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/tsconfig.app.json:/app/tsconfig.app.json
      - ./frontend/tsconfig.node.json:/app/tsconfig.node.json
    command: ['npm', 'run', 'dev']

  gateway:
    build:
      context: ./backend
      dockerfile: ./apps/e-government/Dockerfile
    container_name: gateway
    ports:
      - '3000:3000'
    depends_on:
      - mup-service
      - zavod-service
      - frontend
    environment:
      - PORT=3000
    volumes:
      - ./backend/apps/e-government/src:/app/apps/e-government/src
    command: ['npx', 'nest', 'start', 'e-government', '--watch']
  mup-service:
    build:
      context: ./backend
      dockerfile: ./apps/mup-gradjani-service/Dockerfile
    container_name: mup-service
    ports:
      - '3001:3000'
    environment:
      - PORT=3000
      - DATABASE_URL=postgresql://admin:admin@postgres-mup:5432/mup_gradjani
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_USE_SSL=false
      - MINIO_BUCKET_NAME=e-government-documents
      - MINIO_PUBLIC_URL=http://localhost:9000
    depends_on:
      - postgres-mup
      - minio
    restart: on-failure
    volumes:
      - ./backend/apps/mup-gradjani-service/src:/app/apps/mup-gradjani-service/src
      - ./backend/apps/mup-gradjani-service/prisma:/app/apps/mup-gradjani-service/prisma
    command:
      [
        'sh',
        '-c',
        'npx prisma migrate deploy --schema=apps/mup-gradjani-service/prisma/schema.prisma && npx nest start mup-gradjani-service --watch',
      ]

  zavod-service:
    build:
      context: ./backend
      dockerfile: ./apps/zavod-za-statistiku-service/Dockerfile
    container_name: zavod-service
    ports:
      - '3002:3000'
    environment:
      - PORT=3000
      - DATABASE_URL=postgresql://admin:admin@postgres-zavod:5432/zavod_za_statistiku
      - GMAIL_USER=${GMAIL_USER}
      - GMAIL_PASS=${GMAIL_PASS}
    depends_on:
      - postgres-zavod
      - mup-service
    restart: on-failure
    volumes:
      - ./backend/apps/zavod-za-statistiku-service/src:/app/apps/zavod-za-statistiku-service/src
      - ./backend/apps/zavod-za-statistiku-service/prisma:/app/apps/zavod-za-statistiku-service/prisma
    command:
      [
        'sh',
        '-c',
        'npx prisma migrate deploy --schema=apps/zavod-za-statistiku-service/prisma/schema.prisma && npx nest start zavod-za-statistiku-service --watch',
      ]

  postgres-mup:
    image: postgres:15
    container_name: postgres-mup
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mup_gradjani
    ports:
      - '5432:5432'
    volumes:
      - postgres_mup_data:/var/lib/postgresql/data

  postgres-zavod:
    image: postgres:15
    container_name: postgres-zavod
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: zavod_za_statistiku
    ports:
      - '5433:5432'
    volumes:
      - postgres_zavod_data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: always
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  postgres_mup_data:
  postgres_zavod_data:
  minio_data:
